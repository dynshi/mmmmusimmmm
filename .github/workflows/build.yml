name: Build IPA for Sideloading

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: macos-latest 

    steps:
      - uses: actions/checkout@v4 

      - name: Set up Ruby for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' 

      - name: Install Node.js Dependencies
        run: npm install

      - name: Copy Web Assets (Capacitor Sync)
        run: npx cap copy ios
        
      - name: Install Pods
        run: |
          cd ios/App
          pod install --repo-update

      - name: Build and Package Unsigned IPA (Manual Bypass)
        run: |
          ARCHIVE_PATH=$PWD/build/App.xcarchive
          EXPORT_PATH=$PWD/build
          
          # 1. Archive the project (This step already SUCCEEDS)
          xcodebuild -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$ARCHIVE_PATH" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            clean archive
          
          # 2. **BYPASS EXPORT FAILURE:** Manually package the .ipa file.
          # Create the Payload directory structure required for an IPA.
          mkdir -p "$EXPORT_PATH/Payload"
          
          # Copy the compiled .app bundle from the archive into the Payload folder.
          # The .app file is the actual application binary.
          cp -R "$ARCHIVE_PATH/Products/Applications/App.app" "$EXPORT_PATH/Payload/"
          
          # Zip the Payload directory to create the .ipa file.
          cd "$EXPORT_PATH"
          zip -r App.ipa Payload
          
          # Clean up the intermediate folder
          rm -rf Payload

      - name: Upload the .ipa file
        # Saves the final IPA so you can download it from the workflow run
        uses: actions/upload-artifact@v4
        with:
          name: Musi-App-IPA
          path: build/App.ipa
